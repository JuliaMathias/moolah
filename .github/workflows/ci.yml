name: Elixir CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  MIX_ENV: test
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: "1.18.4"
          otp-version: "27.0"
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Check formatting
        run: mix format --check-formatted
      - name: Check warnings
        run: mix compile --warnings-as-errors
      - name: Run credo
        run: mix credo --strict
      - name: Retrieve PLT cache
        uses: actions/cache@v4
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-27.0-1.18.4-plts-${{ hashFiles('**/mix.lock') }}
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - name: Run dialyzer
        run: MIX_ENV=test mix dialyzer --format github
      - name: Build esbuild
        run: mix esbuild.install
      - name: Install tailwind
        run: mix tailwind.install --no-assets
      - name: Run tests
        run: MIX_ENV=test mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
